name: Docker镜像构建

on:
  push:
    branches: [ "main" ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ "main" ]

env:
  # 使用 GitHub Container Registry
  REGISTRY: ghcr.io
  # github.repository 格式为 user/repo
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    # 设置权限
    permissions:
      contents: read
      packages: write
      # 这个权限用于OIDC token识别
      id-token: write

    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      # 配置Docker构建器
      - name: 设置Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 登录到GitHub容器仓库GHCR
      - name: 登录到容器仓库
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 提取元数据为Docker镜像打标签
      - name: 提取Docker元数据
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      # 构建并推送Docker镜像
      - name: 构建并推送Docker镜像
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # 输出镜像摘要
      - name: 输出镜像摘要
        run: echo "镜像摘要 ${{ steps.build-and-push.outputs.digest }}" 